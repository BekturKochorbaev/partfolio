const PersonalInfo = require("../models/PersonalInfo");
const { User } = require("../models"); // ‚¨ÖÔ∏è –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// üîí –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const getInfo = async (req, res) => {
  try {
    const id = req.user.id;
    const info = await PersonalInfo.findOne({ where: { teacherId: id } });
    const user = await User.findByPk(id); // üîç –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID

    if (!info) return res.status(404).json({ message: '–ù–µ –Ω–∞–π–¥–µ–Ω–æ' });

    const result = {
      ...info.toJSON(),
      avatar: user?.avatar || null,
      diploma: info.diploma || null,
      phoneNumber: info.phoneNumber || null,
      email: info.email || null
    };

    res.json(result);
  } catch (err) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è', error: err.message });
  }
};

// üîí –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const updateInfo = async (req, res) => {
  try {
    const [info, created] = await PersonalInfo.findOrCreate({
      where: { teacherId: req.user.id },
      defaults: { ...req.body, teacherId: req.user.id }
    });

    if (!created) {
      await info.update(req.body);
    }

    if (req.body.avatar) {
      const user = await User.findByPk(req.user.id);
      if (user) {
        user.avatar = req.body.avatar;
        await user.save();
      }
    }

    res.json({ message: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ', info });
  } catch (err) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è', error: err.message });
  }
};

// üîì –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (–ø—É–±–ª–∏—á–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä)
const getInfoById = async (req, res) => {
  try {
    const id = req.params.id;
    const info = await PersonalInfo.findOne({ where: { teacherId: id } });
    const user = await User.findByPk(id);

    if (!info) return res.status(404).json({ message: '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω' });

    const result = {
      ...info.toJSON(),
      teacherId: id,
      avatar: user?.avatar || null,
      diploma: info.diploma || null,
      phoneNumber: info.phoneNumber || null,
      email: info.email || null
    };

    res.json(result);
  } catch (err) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è', error: err.message });
  }
};

module.exports = { getInfo, updateInfo, getInfoById };
