const express = require('express');
const router = express.Router();
const multer = require('multer');
const path = require('path');
const expertActivityController = require('../controllers/expertActivityImprovementController');
const { authenticateToken } = require('../middleware/authMiddleware');
const uploadExperts = require('../utils/uploadExperts');

// üóÇ –•—Ä–∞–Ω–∏–ª–∏—â–µ (–µ—Å–ª–∏ uploadExperts –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≥–¥–µ-—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–æ)
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, 'uploads/experts');
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    const uniqueName = `${Date.now()}-${Math.round(Math.random() * 1e9)}${ext}`;
    cb(null, uniqueName);
  },
});
const upload = multer({ storage });

// üîê –ó–∞—â–∏—â—ë–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
router.post('/', authenticateToken, uploadExperts.array('images'), expertActivityController.create);
router.get('/', authenticateToken, expertActivityController.getAll);
router.put('/:id', authenticateToken, upload.array('images'), expertActivityController.update);
router.delete('/:id', authenticateToken, expertActivityController.remove);
router.delete('/:id/image/:filename', authenticateToken, expertActivityController.removeImage);

// üåê –ü—É–±–ª–∏—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–∞ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Ñ–∏–ª—è
router.get('/public', expertActivityController.getPublicByTeacherId);

module.exports = router;
