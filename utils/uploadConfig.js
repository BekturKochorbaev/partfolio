const multer = require('multer');
const path = require('path');
const fs = require('fs');

// üìÅ –ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º
const UPLOAD_DIR = path.join(__dirname, '..', 'uploads');
const IMAGE_DIR = path.join(UPLOAD_DIR, 'images');
const VIDEO_DIR = path.join(UPLOAD_DIR, 'videos');
const DIPLOMA_DIR = path.join(UPLOAD_DIR, 'diplomas');
const AVATAR_DIR = path.join(UPLOAD_DIR, 'avatars');
const OTHER_DIR = path.join(UPLOAD_DIR, 'others');

// üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫
const createUploadFolders = () => {
  [IMAGE_DIR, VIDEO_DIR, DIPLOMA_DIR, AVATAR_DIR, OTHER_DIR].forEach((dir) => {
    if (!fs.existsSync(dir)) fs.mkdirSync(dir, { recursive: true });
  });
};
createUploadFolders();

// üéØ –§–∏–ª—å—Ç—Ä –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ç–∏–ø–æ–≤
const fileFilter = (req, file, cb) => {
  const allowedTypes = [
    'image/jpeg',
    'image/png',
    'image/jpg',
    'video/mp4',
    'application/pdf',
  ];

  if (allowedTypes.includes(file.mimetype)) {
    cb(null, true);
  } else {
    cb(new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞'), false);
  }
};

// üóÇ –•—Ä–∞–Ω–∏–ª–∏—â–µ –ø–æ —Ç–∏–ø—É —Ñ–∞–π–ª–∞
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    const mimetype = file.mimetype;
    let uploadPath = OTHER_DIR;

    if (mimetype.startsWith('image')) {
      uploadPath = IMAGE_DIR;
    } else if (mimetype.startsWith('video')) {
      uploadPath = VIDEO_DIR;
    }

    cb(null, uploadPath);
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    const uniqueName = `${Date.now()}-${Math.round(Math.random() * 1e9)}${ext}`;
    cb(null, uniqueName);
  },
});

// üìÑ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∏–ø–ª–æ–º–æ–≤
const diplomaStorage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, DIPLOMA_DIR);
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    const uniqueName = `diploma-${Date.now()}${ext}`;
    cb(null, uniqueName);
  },
});

// üë§ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–≤
const avatarStorage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, AVATAR_DIR);
  },
  filename: (req, file, cb) => {
    const ext = path.extname(file.originalname);
    const uniqueName = `avatar-${Date.now()}${ext}`;
    cb(null, uniqueName);
  },
});

// üì¶ –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const upload = multer({ storage, fileFilter });
const uploadDiploma = multer({ storage: diplomaStorage, fileFilter });
const uploadAvatar = multer({ storage: avatarStorage, fileFilter });

module.exports = {
  upload,
  uploadDiploma,
  uploadAvatar,
};
